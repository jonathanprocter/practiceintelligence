/**
 * Emergency Navigation Fix - Removes corrupted elements and rebuilds clean navigation.
 */
export const emergencyNavigationFix = (): void => {
  console.log('üö® STARTING EMERGENCY NAVIGATION FIX...');

  /**
   * Removes all corrupted elements from the document.
   */
  const removeCorruptedElements = (): void => {
    const corruptedSelectors = [
      '*[data-corrupted]',
      '.corrupted-nav',
      '.broken-navigation'
    ];

    corruptedSelectors.forEach(selector => {
      document.querySelectorAll(selector).forEach(element => element.remove());
    });

    console.log('‚úÖ Removed corrupted navigation elements');
  };

  /**
   * Fixes header date format and cleans up corrupted text throughout the document.
   */
  const fixHeaderAndCleanText = (): void => {
    const headerDateRegex = /July 7 - 2025 \(day: 13\)/g;
    const corruptedSymbolsRegex = /√ò=√ú√Ö|√ò=√ù/g;
    const brokenTextNavigationRegex = /!‚Ä¢[^!]*!|Page \d+ of 8 -[^!]*|!‚Ä¢ Back to Weekly Overview|!‚Ä¢ Weekly Overview|!‚Ä¢ Sunday Tuesday !/g;

    document.body.innerHTML = document.body.innerHTML
      .replace(headerDateRegex, 'July 7 - 13, 2025')
      .replace(corruptedSymbolsRegex, '')
      .replace(brokenTextNavigationRegex, '');

    document.querySelectorAll('.event-title, .appointment-title, .event-name').forEach(element => {
      const cleanText = element.textContent?.replace(/üîí\s*|√ò=√ú√Ö|√ò=√ù|[!‚Ä¢]/g, '').replace(/\s+/g, ' ').trim();
      if (cleanText) {
        element.textContent = cleanText;
      }
    });

    console.log('‚úÖ Fixed header date and cleaned corrupted text');
  };

  /**
   * Adds simple navigation buttons to daily views.
   */
  const addSimpleNavigation = (): void => {
    const dailyViews = document.querySelectorAll('.daily-planner, .daily-view');
    dailyViews.forEach(view => {
      const headerHTML = `
        <div style="padding: 20px; background: #f8f9fa; border-bottom: 2px solid #e0e0e0;">
          <button onclick="alert('Go to Weekly View')" style="background: #f0f0f0; border: 2px solid #ccc; border-radius: 8px; padding: 10px 16px; cursor: pointer;">üìÖ Weekly Overview</button>
        </div>
      `;

      const footerHTML = `
        <div style="padding: 20px; background: #f8f9fa; border-top: 2px solid #e0e0e0; display: flex; justify-content: space-between;">
          <button onclick="alert('Previous Day')" style="background: #f0f0f0; border: 2px solid #ccc; border-radius: 8px; padding: 8px 16px; cursor: pointer;">‚Üê Previous</button>
          <button onclick="alert('Go to Weekly View')" style="background: #f0f0f0; border: 2px solid #ccc; border-radius: 8px; padding: 10px 16px; cursor: pointer;">üìÖ Weekly</button>
          <button onclick="alert('Next Day')" style="background: #f0f0f0; border: 2px solid #ccc; border-radius: 8px; padding: 8px 16px; cursor: pointer;">Next ‚Üí</button>
        </div>
      `;

      view.insertAdjacentHTML('afterbegin', headerHTML);
      view.insertAdjacentHTML('beforeend', footerHTML);
    });

    console.log('‚úÖ Added simple navigation buttons');
  };

  /**
   * Removes broken navigation styles by appending a style tag to the head.
   */
  const removeBrokenStyles = (): void => {
    const style = document.createElement('style');
    style.textContent = `
      /* Hide any remaining corrupted navigation elements */
      *[data-corrupted],
      .corrupted-nav,
      .broken-navigation {
        display: none !important;
      }
      
      /* Clean up any text with corrupted characters */
      *:before,
      *:after {
        content: none !important;
      }
    `;
    document.head.appendChild(style);

    console.log('‚úÖ Added cleanup styles');
  };

  // Execute all cleanup steps
  removeCorruptedElements();
  fixHeaderAndCleanText();
  addSimpleNavigation();
  removeBrokenStyles();

  console.log('‚úÖ EMERGENCY NAVIGATION FIX COMPLETE!');
  console.log('Navigation should now be clean and functional');
};

// Auto-execute on page load
if (typeof window !== 'undefined') {
  document.addEventListener('DOMContentLoaded', emergencyNavigationFix);
}